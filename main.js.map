{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-bootcamp/./src/components/validate.js","webpack://mesto-project-bootcamp/./src/utils/constants.js","webpack://mesto-project-bootcamp/./src/components/profile.js","webpack://mesto-project-bootcamp/./src/components/api.js","webpack://mesto-project-bootcamp/./src/components/modal.js","webpack://mesto-project-bootcamp/./src/components/card.js","webpack://mesto-project-bootcamp/./src/pages/index.js"],"sourcesContent":["export function showError(formElement, inputElement, config) {\r\n    const spanWithError = formElement.querySelector('#error-' + inputElement.id);\r\n    spanWithError.textContent = inputElement.validationMessage;\r\n    inputElement.classList.add(config.inputErrorClass); \r\n}\r\n  \r\nexport function hideError(formElement, inputElement, config) {\r\n    const spanWithError = formElement.querySelector('#error-' + inputElement.id);\r\n    spanWithError.textContent = '';\r\n    inputElement.classList.remove(config.inputErrorClass); \r\n}\r\n  \r\nexport function hideErrorBeforeOpenForm(formElement, config) {\r\n    Array.from(formElement.querySelectorAll(config.inputSelector)).forEach((inputElement) => {\r\n      hideError(formElement, inputElement, config);\r\n    })\r\n}\r\n  \r\nexport function checkInputValidity(formElement, inputElement, config) {\r\n    if (!inputElement.validity.valid) {\r\n      showError(formElement, inputElement, config);\r\n    } else {\r\n      hideError(formElement, inputElement, config);\r\n    }\r\n}\r\n  \r\nexport function toggleButton(formElement, buttonSubmitForm) {\r\n    if (formElement.checkValidity()) {\r\n      buttonSubmitForm.disabled = false;\r\n    } else {\r\n      buttonSubmitForm.disabled = true;\r\n    }\r\n}\r\n  \r\nexport function setEventListener (formElement, config) {\r\n    const inputList = formElement.querySelectorAll(config.inputSelector);\r\n    const buttonSubmitForm = formElement.querySelector(config.buttonSubmitSelector);\r\n  \r\n    toggleButton(formElement, buttonSubmitForm);\r\n    inputList.forEach((input) => {\r\n      input.addEventListener('input', () => {\r\n        checkInputValidity(formElement, input, config);\r\n        toggleButton(formElement, buttonSubmitForm);\r\n      });\r\n    });\r\n}\r\n  \r\nexport function enableValidation(config) {\r\n    const formList = document.querySelectorAll(config.formSelector);\r\n    formList.forEach((form) => {\r\n      setEventListener(form, config)\r\n    });\r\n}\r\n","export const popupOpenedGlobal = 'popup_opened';\r\n\r\nexport const popupChangeProfile = document.querySelector('.popup-change-profile');\r\nexport const popupAddCard = document.querySelector('.popup-add-card');\r\nexport const popupOpenImage = document.querySelector('.popup-open-image');\r\nexport const popupChangeAvatar = document.querySelector('.popup-change-avatar');\r\n\r\nexport const popupImage = popupOpenImage.querySelector('.popup__image');\r\nexport const popupTitle = popupOpenImage.querySelector('.popup__title');\r\n\r\nexport const formChangeProfile = document.querySelector('.form-profile')\r\nexport const formAddCard = document.querySelector('.form-card');\r\nexport const formChangeAvatar = document.querySelector('.form-avatar');\r\n\r\n\r\nexport const buttonAddCard = document.querySelector('.profile__buttom-add');\r\nexport const buttonChangeDescription = document.querySelector('.profile__buttom-change-descrition');\r\nexport const buttomChangeAvatar = document.querySelector('.profile__buttom-chage-avatar');\r\n\r\nexport const profileTitle = document.querySelector('.profile__title');\r\nexport const profileSubtitle = document.querySelector('.profile__subtitle');\r\nexport const profileAvatar = document.querySelector('.profile__author-image');\r\n\r\nexport const inputProfileTitle = document.querySelector('.form__input-profile-title');\r\nexport const inputProfileSubtitle = document.querySelector('.form__input-profile-subtitle');\r\nexport const inputCardName = document.querySelector('.form__input-card-name');\r\nexport const inputCardlink = document.querySelector('.form__input-card-link');\r\nexport const inputProfileAvatar = document.querySelector('.form__input-change-avatar');\r\n\r\nexport const cardContainer = document.querySelector('.cards__list');\r\nexport const cardTemplate = document.querySelector('.card-template').content;\r\n\r\n\r\nexport const buttonSubmitProfile = formChangeProfile.querySelector('.form__button-update');\r\n\r\n\r\nexport const configValidation = {\r\n  formSelector: '.form',\r\n  inputSelector: '.form__input',\r\n  buttonSubmitSelector: '.form__button-update',\r\n  inputErrorClass: 'form__input_error'\r\n};\r\n\r\n","import {profileSubtitle, profileTitle, profileAvatar} from '../utils/constants.js'\r\n\r\n\r\nexport function getProfileData() {\r\n    return {name: profileTitle.textContent, about:profileSubtitle.textContent}\r\n}\r\n\r\nexport function setProfileData({name, about}) {\r\n    profileTitle.textContent = name;\r\n    profileSubtitle.textContent = about;\r\n}\r\n\r\nexport function setAvatarData({avatar}) {\r\n    profileAvatar.src = avatar;\r\n}\r\n\r\n","// Токен: 0a794f82-8707-4ab9-84a6-76fc4dbd55c1\r\n// Идентификатор группы: wbf-cohort-7\r\n\r\n\r\nexport const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wbf-cohort-7',\r\n  headers: {\r\n    authorization: '0a794f82-8707-4ab9-84a6-76fc4dbd55c1',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\n\r\nfunction checkResponse(res){\r\n  if (res.ok) {\r\n     return res.json(); \r\n    };\r\n return res.json() \r\n   .then((err) => {\r\n     err.statusCode = res.status;\r\n    return Promise.reject(err);\r\n  });\r\n}\r\n\r\n\r\nconst getCards = () => {\r\n    return fetch(`${config.baseUrl}/cards`,\r\n    {\r\n  headers: config.headers,\r\n  method: 'GET'\r\n})\r\n  .then(checkResponse);   \r\n}\r\n\r\nfunction getCardId(idCard) {\r\n  return fetch(`${config.baseUrl}/cards/${idCard}`, {\r\n    headers: config.headers,\r\n    method: 'GET'\r\n  })\r\n  .then(checkResponse);   \r\n}\r\n\r\nconst postCard = (data) => {\r\n  return fetch(`${config.baseUrl}/cards`,\r\n    {\r\n  headers: config.headers,\r\n  method: 'POST',\r\n  body: JSON.stringify(data)\r\n})\r\n  .then(checkResponse);   \r\n}\r\n\r\nfunction deleteCard(idCard) {  \r\n  // Вместо cardId в URL нужно подставить свойство _id соответствующей карточки.\r\n  return fetch(`${config.baseUrl}/cards/${idCard}`, {\r\n    headers: config.headers,\r\n    method: 'DELETE'\r\n  })\r\n  .then(checkResponse);   \r\n}\r\n\r\nconst getProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`,{\r\n    headers: config.headers,\r\n    method: 'GET'\r\n  })\r\n  .then(checkResponse)   \r\n}\r\n\r\n\r\nfunction patchProfile(data) {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n    method: 'PATCH',\r\n    body: JSON.stringify(data)\r\n  })\r\n  .then(checkResponse)   \r\n} \r\n\r\nconst getAvatar = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n    method: 'GET'\r\n  })\r\n  .then(checkResponse)   \r\n}\r\n\r\n\r\nfunction patchAvatar(data) {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    headers: config.headers,\r\n    method: 'PATCH',\r\n    body: JSON.stringify(data)\r\n  })\r\n  .then(checkResponse)   \r\n} \r\n\r\n\r\n\r\nfunction putLike(idCard) {  \r\n  return fetch(`${config.baseUrl}/cards/likes/${idCard}`, {\r\n    headers: config.headers,\r\n    method: 'PUT'\r\n  })\r\n  .then(checkResponse);   \r\n}\r\n\r\nfunction deleteLike(idCard) {  \r\n  return fetch(`${config.baseUrl}/cards/likes/${idCard}`, {\r\n    headers: config.headers,\r\n    method: 'DELETE'\r\n  })\r\n  .then(checkResponse);   \r\n}\r\n\r\nconst api = {\r\n  getProfile,\r\n  getCards,\r\n  patchProfile,\r\n  postCard,\r\n  getAvatar,\r\n  patchAvatar,\r\n  putLike,\r\n  deleteLike,\r\n  deleteCard,\r\n}\r\n\r\nexport {api}\r\n","import {formAddCard,popupChangeAvatar, buttomChangeAvatar, popupOpenedGlobal, inputProfileTitle, inputProfileSubtitle, profileTitle, profileSubtitle,buttonSubmitProfile, formChangeProfile, configValidation, popupChangeProfile, popupAddCard, formChangeAvatar, inputProfileAvatar} from '../utils/constants.js'\r\nimport {hideErrorBeforeOpenForm} from '../components/validate.js'\r\nimport {getProfileData, setProfileData, setAvatarData} from './profile.js' \r\nimport {api} from './api.js'\r\n\r\n\r\n\r\nexport function handleNewCardСlick() {\r\n    openPopup(popupAddCard);\r\n  }\r\n\r\nexport function openPopup(popup) {\r\n    popup.classList.add(popupOpenedGlobal);\r\n    document.addEventListener('keydown',closeWithEscape)\r\n}\r\n  \r\nexport function closePopup(popup) {\r\n    popup.classList.remove(popupOpenedGlobal);\r\n    document.removeEventListener('keydown',closeWithEscape);\r\n}\r\n\r\nexport function closeWithEscape(event) {\r\n    if (event.key === 'Escape') {\r\n        const currentPopup = document.querySelector('.popup_opened');\r\n    closePopup(currentPopup);    \r\n    }\r\n}\r\n\r\nexport function openProfile() {\r\n    const {name, about} = getProfileData();\r\n    inputProfileTitle.value = name;\r\n    inputProfileSubtitle.value = about;\r\n    hideErrorBeforeOpenForm(formChangeProfile, configValidation);\r\n    openPopup(popupChangeProfile);\r\n}\r\n\r\nexport function closeWithClickOnOverlay(event, currentPopup, closingElement) {\r\n    const withinBoundaries = event.composedPath().includes(closingElement);\r\n    if (! withinBoundaries) {\r\n        closePopup(currentPopup);   \r\n    }\r\n};\r\n\r\n\r\nexport function handleProfileSubmit(event) {\r\n    event.preventDefault();\r\n    updateButtonCaption(buttonSubmitProfile,\"Сохранение...\");\r\n\r\n    api.patchProfile({name: inputProfileTitle.value, about:inputProfileSubtitle.value})\r\n    .then((user) => {\r\n      setProfileData(user);\r\n      closePopup(popupChangeProfile);\r\n    })\r\n    .finally(() => {updateButtonCaption(buttonSubmitProfile,\"Сохранить\")})\r\n}\r\n\r\nexport function updateButtonCaption(button, caption) {\r\n    button.textContent = caption;\r\n}\r\n\r\nexport function handleAvatarSubmit(event) {\r\n    event.preventDefault();\r\n    const buttonSubmitForm = formChangeAvatar.querySelector(configValidation.buttonSubmitSelector);\r\n    updateButtonCaption(buttonSubmitForm, 'Сохранение...');\r\n\r\n    \r\n    api.patchAvatar({avatar: inputProfileAvatar.value})\r\n    .then(avatar => {\r\n        setAvatarData(avatar);\r\n\r\n        closePopup(popupChangeAvatar);\r\n    })\r\n    .finally(() => {updateButtonCaption(buttonSubmitProfile,\"Сохранить\")})\r\n\r\n}\r\n\r\nexport function handleNewAvatarСlick() {\r\n    hideErrorBeforeOpenForm(formChangeAvatar, configValidation);\r\n    openPopup(popupChangeAvatar);\r\n  }\r\n","import {cardTemplate, inputCardName, inputCardlink, cardContainer, popupAddCard, popupImage, popupTitle, popupOpenImage, formAddCard, configValidation} from '../utils/constants.js'\r\nimport {closePopup,openPopup, updateButtonCaption} from './modal.js'\r\nimport {toggleButton} from '../components/validate.js'\r\nimport {api} from './api.js'\r\n\r\n\r\nexport function handleAddCard(event) {\r\n    event.preventDefault();\r\n    const buttonSubmitForm = formAddCard.querySelector(configValidation.buttonSubmitSelector);\r\n    updateButtonCaption(buttonSubmitForm, 'Сохранение...');\r\n\r\n    const newCard = {name: inputCardName.value, link: inputCardlink.value}; \r\n    \r\n\r\n    Promise.all([api.postCard(newCard), api.getProfile()])\r\n    .then(([card,user]) => {\r\n      const {name, about, _id} = user; \r\n      addCard(cardContainer, {name: card.name, link: card.link, massiveLikes: card['likes'], cardId: card['_id'], cardOwner: card['owner'], userAuthorized: user}, 'y');\r\n\r\n      event.target.reset();\r\n      toggleButton(formAddCard, buttonSubmitForm);\r\n      closePopup(popupAddCard);\r\n\r\n    })\r\n    .catch((res) => {console.log(res)})\r\n    .finally(() => {\r\n      updateButtonCaption(buttonSubmitForm,\"Сохранить\")\r\n    })\r\n\r\n  }\r\n  \r\nexport function deleteCard(event) {\r\n    event.target.closest('.card').remove();\r\n  }\r\n  \r\nexport function likeCard(event) {\r\n    event.target.classList.toggle('card__buttom-like_active');\r\n  }\r\n\r\nexport function createCard(card, deleteable) {\r\n\r\n      const cardElement = cardTemplate.querySelector('.card').cloneNode(true);\r\n      const cardElementImage = cardElement.querySelector('.card__image');\r\n      const cardElementTitle = cardElement.querySelector('.card__title');\r\n      const cardButtonLike = cardElement.querySelector('.card__buttom-like');\r\n      const cardElementLikeNumber = cardElement.querySelector('.card__like-number');\r\n      const cardButtonDelete = cardElement.querySelector('.card__buttom-delete');\r\n      \r\n      cardElementImage.src = card.link;\r\n      cardElementImage.alt = card.name;\r\n      cardElementImage.id = card.cardId;\r\n      cardElementTitle.textContent = card.name;\r\n         \r\n      cardElementLikeNumber.textContent = card.massiveLikes['length']; // кол-во лайков у карточки (число)\r\n\r\n      // массив id'шников лайкнушивх карточку пользователй\r\n      const listLikes = card.massiveLikes.map((liker) => liker['_id'])\r\n      cardElementLikeNumber.id = listLikes;\r\n\r\n      \r\n\r\n      if (listLikes.includes(card.userAuthorized['_id'])) {\r\n        cardButtonLike.classList.add('card__buttom-like_active') // для смены состояния есть функция, но она работает только в слушателе\r\n      }\r\n\r\n      function openImage() {\r\n        popupImage.alt = card.name;\r\n        popupImage.src = card.link;\r\n        popupTitle.textContent = card.name;\r\n        openPopup(popupOpenImage)\r\n      }\r\n\r\n      // если карточка моя - сохраянем фичу удаления, иначе удаляем кнопку удаления карточки\r\n      if (deleteable === 'y') { \r\n        cardButtonDelete.addEventListener('click', deleteCard);\r\n        cardButtonDelete.addEventListener('click', (event) => {\r\n          const idCurrentCard = event.target.closest('.card').querySelector('.card__image').id;\r\n          api.deleteCard(idCurrentCard)\r\n          .catch(console.dir)\r\n        })\r\n      } else {\r\n        cardButtonDelete.remove();\r\n      }\r\n\r\n      cardButtonLike.addEventListener('click', (event) => {\r\n        const idCurrentCard = event.target.closest('.card').querySelector('.card__image').id;\r\n        const listLikers = event.target.closest('.card').querySelector('.card__like-number').id;\r\n        api.getProfile()\r\n        .then((res) => {\r\n          if (listLikers.split(',').includes(res['_id'])) {\r\n            api.deleteLike(idCurrentCard)\r\n            .then((res) => {\r\n              cardElementLikeNumber.textContent = res['likes']['length'];\r\n              const listLikes = res['likes'].map((liker) => liker['_id'])\r\n              cardElementLikeNumber.id = listLikes;\r\n              // console.log('Я снял лайк')\r\n            })\r\n            .catch(console.dir)\r\n            .finally(() => {likeCard(event);})\r\n          } else {\r\n            api.putLike(idCurrentCard)\r\n            .then((res) => {\r\n              cardElementLikeNumber.textContent = res['likes']['length'];\r\n              const listLikes = res['likes'].map((liker) => liker['_id'])\r\n              cardElementLikeNumber.id = listLikes;\r\n              // console.log('Я поставил лайк')\r\n            })\r\n            .catch(console.dir)\r\n            .finally(() => {likeCard(event);})\r\n            }\r\n        })\r\n      })\r\n      \r\n      cardElementImage.addEventListener('click', openImage);\r\n  \r\n      return cardElement;\r\n  }\r\n  \r\nexport function addCard(cardsList, currentCard, deleteable) {\r\n      return cardsList.append(createCard(currentCard, deleteable));\r\n}\r\n\r\n\r\n","import './index.css';\r\nimport {enableValidation} from '../components/validate.js'\r\nimport {closePopup, openProfile, closeWithClickOnOverlay, handleProfileSubmit, handleNewCardСlick, handleNewAvatarСlick,handleAvatarSubmit} from '../components/modal.js'\r\nimport {handleAddCard, addCard} from '../components/card.js'\r\nimport {configValidation, popupChangeProfile, formChangeProfile, popupAddCard, formAddCard, formChangeAvatar, cardContainer, buttonAddCard, buttonChangeDescription, popupImage, popupOpenImage, buttomChangeAvatar, popupChangeAvatar} from '../utils/constants.js'\r\nimport {api} from '../components/api';\r\nimport {setProfileData,setAvatarData} from '../components/profile';\r\n\r\n\r\n\r\nexport function InitialData() {\r\n  Promise.all([api.getCards(), api.getProfile(), api.getAvatar()])\r\n  .then(([cards, user, avatarka]) => {\r\n    const {name, about, _id} = user; \r\n    setProfileData(user);\r\n    setAvatarData(avatarka);\r\n\r\n    cards.forEach((card) => {\r\n\r\n      if (user['_id'] === card.owner['_id']) {\r\n        addCard(cardContainer, {name: card.name, link: card.link, massiveLikes: card['likes'], cardId: card['_id'], cardOwner: card['owner'], userAuthorized: user}, 'y');\r\n      } else {\r\n        addCard(cardContainer, {name: card.name, link: card.link, massiveLikes: card['likes'], cardId: card['_id'], cardOwner: card['owner'], userAuthorized: user}, 'n');\r\n      }\r\n    })\r\n  })\r\n  .catch(console.dir)\r\n  .finally(() => {console.log('Попытка загрузки данных завершена')})\r\n}\r\n\r\nInitialData();\r\n\r\nfunction addEventListeners() {\r\n  document.querySelectorAll('.popup__buttom-hide')\r\n  .forEach((button) => {\r\n    const popup = button.closest('.popup');\r\n    button.addEventListener('click', () => {\r\n      closePopup(popup);\r\n    });\r\n  });\r\n  formAddCard.addEventListener('submit', handleAddCard);\r\n  formChangeProfile.addEventListener('submit', handleProfileSubmit); \r\n  formChangeAvatar.addEventListener('submit', handleAvatarSubmit)\r\n  buttonAddCard.addEventListener('click', handleNewCardСlick);\r\n  buttonChangeDescription.addEventListener('click', openProfile);\r\n  buttomChangeAvatar.addEventListener('click', handleNewAvatarСlick);\r\n\r\n  popupOpenImage.addEventListener('click', (event) => {\r\n    closeWithClickOnOverlay(event, popupOpenImage, popupImage);\r\n  });\r\n\r\n  popupChangeProfile.addEventListener('click', (event) => {\r\n    closeWithClickOnOverlay(event, popupChangeProfile, formChangeProfile);\r\n  });\r\n\r\n  popupAddCard.addEventListener('click', (event) => {\r\n    closeWithClickOnOverlay(event, popupAddCard, formAddCard);\r\n  });\r\n\r\n  popupChangeAvatar.addEventListener('click', (event) => {\r\n    closeWithClickOnOverlay(event, popupChangeAvatar, formChangeAvatar);\r\n  });\r\n}\r\n\r\naddEventListeners();\r\n  \r\n\r\nenableValidation(configValidation);\r\n\r\n\r\n// сбработает call back если не было catch у промиса\r\n\r\nwindow.addEventListener('unhandledrejection', (evt) => {\r\n  console.error('Необработанная ошибка.\\nМесто возникновения: ');\r\n  console.error(evt.promise);\r\n  console.error('Информация об ошибке:');\r\n  console.error(evt.reason);\r\n});\r\n\r\n\r\n\r\n// async function anotherInitialData() {\r\n//   try {  \r\n//     const [cards, user] = await Promise.all([api.getCards(), api.getProfile()]);\r\n//     const {name, about, _id} = user; \r\n\r\n//     profileTitle.textContent = name;\r\n//     profileSubtitle.textContent = about;\r\n\r\n//     cards.forEach(({link, name: place}) => {\r\n//       addCard(cardContainer, {name: place, link});\r\n\r\n//     })\r\n//     } catch(err) {\r\n//       console.log(\"Сработал catch\")\r\n//       console.dir(err)\r\n//     } finally {\r\n//       console.log('Попытка загрузки данных завершена');\r\n//     }\r\n\r\n//     }\r\n  "],"names":["hideError","formElement","inputElement","config","querySelector","id","textContent","classList","remove","inputErrorClass","hideErrorBeforeOpenForm","Array","from","querySelectorAll","inputSelector","forEach","toggleButton","buttonSubmitForm","checkValidity","disabled","popupOpenedGlobal","popupChangeProfile","document","popupAddCard","popupOpenImage","popupChangeAvatar","popupImage","popupTitle","formChangeProfile","formAddCard","formChangeAvatar","buttonAddCard","buttonChangeDescription","buttomChangeAvatar","profileTitle","profileSubtitle","profileAvatar","inputProfileTitle","inputProfileSubtitle","inputCardName","inputCardlink","inputProfileAvatar","cardContainer","cardTemplate","content","buttonSubmitProfile","configValidation","formSelector","buttonSubmitSelector","setProfileData","_ref","name","about","setAvatarData","_ref2","avatar","src","baseUrl","headers","authorization","checkResponse","res","ok","json","then","err","statusCode","status","Promise","reject","api","getProfile","fetch","concat","method","getCards","patchProfile","data","body","JSON","stringify","postCard","getAvatar","patchAvatar","putLike","idCard","deleteLike","deleteCard","openPopup","popup","add","addEventListener","closeWithEscape","closePopup","removeEventListener","event","key","closeWithClickOnOverlay","currentPopup","closingElement","composedPath","includes","updateButtonCaption","button","caption","target","closest","likeCard","toggle","addCard","cardsList","currentCard","deleteable","append","card","cardElement","cloneNode","cardElementImage","cardElementTitle","cardButtonLike","cardElementLikeNumber","cardButtonDelete","link","alt","cardId","massiveLikes","listLikes","map","liker","userAuthorized","idCurrentCard","catch","console","dir","listLikers","split","finally","createCard","all","cards","user","avatarka","_id","owner","cardOwner","log","preventDefault","newCard","value","reset","_getProfileData","form","inputList","input","validity","valid","validationMessage","showError","checkInputValidity","setEventListener","enableValidation","window","evt","error","promise","reason"],"sourceRoot":""}